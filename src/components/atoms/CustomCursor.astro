---
const { text, id } = Astro.props;
---
<span id="custom-cursor" data-id={id}>
  <p id="cursor-text" class="utility">{text}</p>
</span>

<style>

  #custom-cursor {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    aspect-ratio: 1 / 1;
    border-radius: var(--radius-rounded);
    background: var(--color-foreground);
    color: var(--color-background);
    padding: var(--space-md);
    pointer-events: none;
    top: 0;
    z-index: 999;
    opacity: 0;
    scale: 0;
    transition: opacity var(--anim-sm), scale var(--anim-sm);
    translate: -75% -100%;
  }

  #custom-cursor.visible {
    opacity: 1;
    scale: 1;
  }

  #custom-cursor.active {
    scale: 0.8;
  }

  @media screen and (max-width: 768px) {
    #custom-cursor {
      visibility: hidden;
    }
  }
</style>

<script>

  

  import { throttle } from "../../utils/functions"
  import { lenis } from "../../utils/lenis"

  const cursor = document.getElementById("custom-cursor")
  const cursorText = document.getElementById("cursor-text")

  window.addEventListener("activateCursor", (e) => {
    console.log(e)
    if (e.detail.text) cursorText.innerText = e.detail.text
    cursor.classList.add("visible")
  })

  window.addEventListener("mousedown", (e) => {
    cursor.classList.add("active")
  })

  window.addEventListener("mouseup", (e) => {
    cursor.classList.remove("active")
  })

  window.addEventListener("deactivateCursor", () => {
    cursor.classList.remove("visible")
    cursorText.innerText = ""
  })

  let positionX;
  let positionY;

  const throttledTrackCursor = throttle(() => {
    // console.log('thor')
    cursor.style.left = `${positionX}px`
    cursor.style.top = `${positionY}px`
  }, 1)

  const updatePosition = (e) => {
    positionX = e.clientX
    // positionY = e.pageY
    positionY = lenis.animatedScroll + e.clientY
  }

  window.addEventListener("mousemove", (e) => {
    // console.log(e)
    updatePosition(e)
    throttledTrackCursor()
  })

</script>