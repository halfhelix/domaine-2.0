---
import { getProjects } from "../../../utils/sanityClient";
import ArrowLink from "../../atoms/ArrowLink.astro";
import ProjectCard from "../../atoms/ProjectCard.astro";


const { relatedProjects, content, heading = "Select Work" } = Astro.props;

let projects, title

const minProjectCount = 1

if ( relatedProjects && relatedProjects.length >= minProjectCount) {
  title = heading
  projects = relatedProjects
} else if (content && content.projects) {
  content.heading ? title = content.heading : title = heading
  projects = content.projects
} else {
  title = "Select Work"
  const allProjects = await getProjects()
  projects = allProjects.slice(0, minProjectCount)
}

---
<section class="section_work" data-project-count={projects.length}>

  <div class="section-title" data-animate-viewport="true" data-animate-style="fade">
    <div class="section-intro">
      <h2 class="h4">{title}</h2>
      {content && content.subheading && <p>{content.subheading}</p>}
    </div>
    {content && content.button && content.button.text && content.button.url ? 
      <ArrowLink text={content.button.text} url={content.button.url} />
      :
      <ArrowLink text="View All" url="/work" />
    }
  </div>

  <div class="projects" data-animate-viewport="true" data-animate-style="fade-up" data-animate-delay="200">
    {projects.map((project) => (
      <div class="project-card-wrapper">
        <ProjectCard
          title={project.title}
          subtitle={project.subtitle}
          slug={project.slug.current}
          image={project.thumbnail}
        />
      </div>
    ))}
  </div>
  <!-- <WorkGrid projects={projects.slice(0, 3)} /> -->
</section>

<style>
  .section_work {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    padding: var(--space-lg) 0;
  }

  .section_work[data-project-count="1"] {
    flex-direction: row;
    justify-content: stretch;
    align-items: center;
    gap: var(--space-xl);
    padding-inline: var(--page-margin);
  }

  .section-title {
    /* padding: 0 var(--page-margin); */
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-lg);
    flex-wrap: wrap;
    align-items: flex-end;
    padding-inline: var(--page-margin);
  }

  .section_work[data-project-count="1"] .section-title {
    flex-direction: column;
    align-items: flex-start;
    flex: 0 1 50%;
    padding-inline: 0;
  }

  .projects {
    display: flex;
    flex-direction: row;
    flex: 0 0 50%;
    gap: var(--grid-gap);
    padding-inline: var(--page-margin);
  }

  .section_work[data-project-count="1"] .projects {
    padding-inline: 0;
  }

  .section_work[data-project-count="5"] .projects {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
  }

  .project-card-wrapper {
    width: 100%;
  }

  .section_work[data-project-count="5"] .project-card-wrapper:nth-child(1) {
    grid-column: auto / span 2;
    grid-row: auto / span 2;
  }

  @media screen and (max-width: 768px) {

    .section_work[data-project-count="1"] {
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
    }

    .projects {
      padding-bottom: var(--space-md);
    }

    .section_work[data-project-count="1"] .projects,
    .section_work[data-project-count="2"] .projects {
      flex-direction: column;
    }
    
    .section_work[data-project-count="3"] .projects,
    .section_work[data-project-count="4"] .projects,
    .section_work[data-project-count="5"] .projects {
      overflow-x: auto;
    }

    .section_work[data-project-count="3"] .projects .project-card-wrapper,
    .section_work[data-project-count="4"] .projects .project-card-wrapper,
    .section_work[data-project-count="5"] .projects .project-card-wrapper {
      flex: 0 0 80%;
    }

    .section_work[data-project-count="5"] .projects {
      display: flex;
    }

    .section-title {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>