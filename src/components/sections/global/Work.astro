---
import { getProjects } from "../../../utils/sanityClient";
import ArrowLink from "../../atoms/ArrowLink.astro";
import ProjectCard from "../../atoms/ProjectCard.astro";
import WorkGrid from "../work/Work_Grid.astro";


const { content } = Astro.props;

let projects

if (content.projects) {
  projects = content.projects
} else {
  const projects = await getProjects()
}


---
<section class="section_work" data-project-count={projects.length}>
  { content.heading && 
    <div class="section-title">
      <div class="section-intro">
        <h2 class="h2">{content.heading}</h2>
        {content.subheading && <p>{content.subheading}</p>}
      </div>
      {content.button && content.button.text && content.button.url && <ArrowLink text={content.button.text} url={content.button.url} />}
    </div>
  }
  <div class="projects" >
    {projects.map((project) => (
      <div class="project-card-wrapper">
        <ProjectCard
          title={project.title}
          subtitle={project.subtitle}
          slug={project.slug.current}
          image={project.thumbnail}
        />
      </div>
    ))}
  </div>
  <!-- <WorkGrid projects={projects.slice(0, 3)} /> -->
</section>

<style>
  .section_work {
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
    padding: var(--space-lg) 0;
  }

  .section_work[data-project-count="1"] {
    flex-direction: row;
    justify-content: stretch;
    align-items: center;
    gap: var(--space-xl);
    padding-inline: var(--page-margin);
  }

  .section-title {
    /* padding: 0 var(--page-margin); */
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-lg);
    flex-wrap: wrap;
    align-items: flex-end;
    padding-inline: var(--page-margin);
  }

  .section_work[data-project-count="1"] .section-title {
    flex-direction: column;
    align-items: flex-start;
    flex: 0 1 50%;
    padding-inline: 0;
  }

  .projects {
    /* padding: 0 var(--page-margin); */
    --gap: var(--space-md);
    display: flex;
    flex-direction: row;
    flex: 0 0 50%;
    gap: var(--gap);
    padding-inline: var(--page-margin);
  }

  .section_work[data-project-count="1"] .projects {
    padding-inline: 0;
  }

  .section_work[data-project-count="5"] .projects {
    /* padding-inline: 0; */
    /* flex-wrap: wrap; */
    display: grid;
    grid-template-columns: repeat(4, 1fr);
  }

  .project-card-wrapper {
    width: 100%;
  }

  .section_work[data-project-count="5"] .project-card-wrapper:nth-child(1) {
    grid-column: auto / span 2;
    grid-row: auto / span 2;
  }

  @media screen and (max-width: 768px) {

    .section_work[data-project-count="1"] {
      flex-direction: column;
      justify-content: flex-start;
      align-items: stretch;
    }

    .projects {
      padding-bottom: var(--space-md);
    }

    .section_work[data-project-count="1"] .projects,
    .section_work[data-project-count="2"] .projects {
      flex-direction: column;
    }
    
    .section_work[data-project-count="3"] .projects,
    .section_work[data-project-count="4"] .projects,
    .section_work[data-project-count="5"] .projects {
      overflow-x: auto;
    }

    .section_work[data-project-count="3"] .projects .project-card-wrapper,
    .section_work[data-project-count="4"] .projects .project-card-wrapper,
    .section_work[data-project-count="5"] .projects .project-card-wrapper {
      flex: 0 0 80%;
    }

    .section_work[data-project-count="5"] .projects {
      display: flex;
    }

    .section-title {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>