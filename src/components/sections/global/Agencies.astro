---
import SanityImage from "../../atoms/SanityImage.astro";
const { content } = Astro.props;
// console.log(content)
---
<section class="agencies">
  <div class="section-title">
    <h2 class="heading">{content.heading}</h2>
  </div>
  <div class="text-blocks">
    {content.agencies.map((agency, i) => {
      return (
          <div class="text-block">

            <a href={agency.linkURL} target="_blank" class="block-image">
              
              <SanityImage
                sizes="(max-width: 768px) 33vw, 25vw"
                image={agency.logo}
                alt={`Agency logo for ${agency.name}`} 
              />
            </a>
            <p class="description">{agency.description}</p>
          </div>
      )
    })}
  </div>
</section>

<script>
  import { createViewportObserver } from  '../../../utils/viewportObserver.js';

  const initImageAnimation = () => {
    // console.log('init')
    const textBlocks = document.querySelectorAll('.text-block');

    textBlocks.forEach((block: HTMLElement) => {
      createViewportObserver(block, {bidirectional: false});
    })
  }

  initImageAnimation()

  document.addEventListener("astro:page-load", () => {
    initImageAnimation()
  })
  
</script>

<style>
  .agencies {
    padding: var(--space-3xl) var(--page-margin);
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    gap: var(--space-2xl);
  }

  .section-title {
    flex: 1 0 auto;
  }

  .text-blocks {
    display: flex;
    flex-direction: row;
    gap: var(--space-md);
    justify-content: flex-end;
    flex: 0 1 50%;
  }

  .text-block {
    flex: 1 0 25%;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-md);
    max-width: 80ch;
    opacity: 1;
    translate: 0 0;
    transition: opacity var(--anim-lg), translate var(--anim-lg);
  }

  .text-block[data-animate="true"] {
    opacity: 0;
    translate: 0 60px;
  }

  .block-image {
    max-width: 60%;
    max-height: 60px;
    width: auto;
    /* width: 80%; */
    height: auto;
  }

  .description {
    color: var(--color-foreground-secondary);
  }

  @media screen and (max-width: 960px) {
    
    .agencies {
      flex-direction: column;
      justify-content: flex-start;
    }

    .text-blocks {
      flex-wrap: wrap;
      gap: var(--space-2xl);
      justify-content: flex-start;
    }

    .text-block {
      flex: 1 0 25%;
      margin: 0;
      min-width: 300px;
    }

    .block-image {
      /* max-height: 80px; */
    }
  }

</style>