---
import { urlFor } from "../../../utils/sanityClient";
import SanityImage from "../../atoms/SanityImage.astro";
const { content } = Astro.props;
// console.log(content)
---
<section class="section_about">

  <div class="text">
    <div class="section-title" data-animate-viewport="true" data-animate-style="fade-up">
      {content.heading && <h2 class="h2">{content.heading}</h2> }
      {content.subheading && <h3 class="h6">{content.subheading}</h3> }
    </div>
    <ul class="callouts">
      {content.stats && content.stats.map((stat, i) => {
        return (
          <li class="callout" data-animate-viewport="true" data-animate-style="fade-up" data-animate-delay={i * 200}>
            {stat.content[0].children.map((node) => {
                if (node.marks.includes("em")) return <em class="h6">{node.text.trim()}</em>
                return <p class="h6">{node.text.trim()}</p>
              })
            }
          </li>
        )
      })}
    </ul>
  </div>

  <div class="media" data-embed={content.youtubeVideoID ? "true" : "false"}>

    {content.videoURL && (
      <video 
        class="video" 
        width="50vw" 
        height="100vh"
        autoplay
        loop
        muted
        playsinline
        onloadedmetadata="this.muted = true"
        poster={urlFor(content.image).width(1290).height(1935).auto('format').url()}
      >
        <source src={content.videoURL} type="video/mp4" />
      </video>
      
    )} 
    
    {!content.videoURL && (
      <SanityImage 
        image={content.image}
        sizes="(max-width: 960px) 100vw, 50vw"
      />
    )}

  </div>
</section>

<style>

  .section_about {
    display: flex;
    flex-direction: row;
    /* justify-content: space-between; */
    justify-content: stretch;
    align-items: flex-start;
    padding: var(--header-height) var(--page-margin) var(--space-2xl);
    gap: var(--space-xl);
  }

  .text,
  .media {
    flex: 0 1 50%;
  }

  .text {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    position: sticky;
    top: var(--header-height);
  }

  .section-title {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
  }

  .callouts {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: var(--space-xs);
  }

  .callout {
    border: 1px var(--color-border) solid;
    border-radius: var(--space-xs);
    padding: var(--space-sm) var(--space-md);
    display: flex;
    flex-direction: row;
    gap: 1ch;
    color: var(--color-foreground-secondary);
  }

  .callout em {
    font-style: normal;
    color: var(--color-foreground);
  }

  .media {
    /* background-color: red; */
    align-self: stretch;
    /* height: calc(100svh - var(--space-2xl) * 2); */
    /* max-height: 100svh; */
    border-radius: var(--radius-lg);
    overflow: hidden;
    opacity: 1;
    transition: opacity var(--anim-lg);
  }
  
  .media[data-embed="true"] {
    aspect-ratio: 1080 / 1920;
    /* flex-basis: auto; */
    /* flex-grow: 0; */
    /* justify-self: flex-end; */
    height: auto;
  }

  .about[data-animate="true"] .media{
    opacity: 0;
  }

  .video,
  .image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .video-embed {
    pointer-events: none;
  }

  @media screen and (max-width: 960px) {
    .section_about {
      flex-direction: column;
      justify-content: flex-start;
    }

    .text {
      position: relative;
      top: unset;
    }

    .media {
      min-height: unset;
    }

    .text,
    .media {
      flex: 0 0 auto;
    }
  }

</style>