---
import { urlFor } from "../../../utils/sanityClient";
import ViewportObserver from "../../../animation/ViewportObserver";

const { content } = Astro.props;
---
<section class="services">
  <div class="section-main">
    <div class="section-title">
      {content.heading && <h2 class="h2">{content.heading}</h2> }
      {content.subheading && <h3 class="h5">{content.subheading}</h3> }
    </div>
    <div class="media">
      {content.services.map((service, i) => {
        return (
          <img
            class="service-image"
            sizes="50vw"
            srcset={`
              ${urlFor(service.image).width(800).auto('format').url()} 800w,
              ${urlFor(service.image).width(1290).auto('format').url()} 1290w,
              ${urlFor(service.image).width(1536).auto('format').url()} 1536w,
              ${urlFor(service.image).width(2700).auto('format').url()} 2700w,
            `}
            src={urlFor(service.image).width(800).height(1600).auto('format').url()}
            alt={`Visualization of Domaine's ${service.title} service.`}
            width="50vw"
            height="50vh"
            data-index={i}
          />
        )
      })}
    </div>
  </div>
  <div class="section-details">
    {content.services.map((service, i) => {
      return (
        <ViewportObserver client:only="solid-js">
          <div class="detail-block" data-index={i}>
            <img
              class="service-image-mobile"
              sizes="100vw"
              srcset={`
                ${urlFor(service.image).width(800).auto('format').url()} 800w,
                ${urlFor(service.image).width(1290).auto('format').url()} 1290w,
                ${urlFor(service.image).width(1536).auto('format').url()} 1536w,
              `}
              src={urlFor(service.image).width(800).height(1600).auto('format').url()}
              width="100vw"
              height="100vw"
            />
            {service.title && <h4>{service.title}</h4> }
            {service.description && <h5 class="h6">{service.description}</h5> }
            <ul class="deliverables">
              {service.deliverables && service.deliverables.map((deliverable) => {
                return (
                  <li class="deliverable h6">{deliverable}</li>
                )
              })}
            </ul>
          </div>
        </ViewportObserver>
      )
    })}
  </div>
</section>

<script>

  document.addEventListener('astro:page-load', () => {
    const detailBlocks = document.querySelectorAll('.detail-block');
    const serviceImages = document.querySelectorAll('.service-image');

    const toggleActiveImage = (index) => {
      serviceImages.forEach((element: HTMLElement, i) => {
        if (i == index) {
          return element.dataset.active = "true";
        }
        return element.dataset.active = "false";
      })
    }

    detailBlocks.forEach((block: HTMLElement) => {
      block.addEventListener('inView', () => {
        toggleActiveImage(block.dataset.index);
      })
    })
  })
</script>

<style>
  .services {
    padding: var(--space-xl) var(--page-margin);
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    gap: var(--space-3xl);
    min-height: 100svh;
    /* width: 100%; */
  }

  .section-main,
  .section-details {
    flex: 0 1 50%;
  }

  .section-main {
    /* flex: 0 0 60%; */
    display: flex;
    flex-direction: column;
    justify-content: stretch;
    align-items: stretch;
    position: sticky;
    top: 0;
    height: 100svh;
    max-height: 100svh;
    gap: var(--space-md);
    /* padding-bottom: var(--space-md); */
    /* padding: var(--header-height) 0 var(--space-md); */
  }

  .section-title {
    display: flex;
    flex-direction: column;
    padding: var(--header-height) 0 0;
  }

  .media {
    flex: 1 1 100%;
    border-radius: var(--radius-sm);
    margin-bottom: var(--space-md);
    overflow: hidden;
    position: relative;
  }

  .service-image {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: contain;
    opacity: 0;
    scale: 1.1;
    transition: opacity var(--anim-lg), scale var(--anim-lg);
  }

  .service-image-mobile {
      display: none;
    }

  .service-image[data-active="true"] {
    opacity: 1;
    scale: 1;
  }

  .section-details {
    display: flex;
    flex-direction: column;
    gap: 20lvh;
    padding: var(--header-height) 0;
  }

  .detail-block {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    transition: opacity 1s ease;
  }

  .detail-block[data-animate="true"] {
    opacity: 0;
  }

  .deliverables {
    padding: 0;
    list-style: none;
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    color: var(--color-foreground-secondary);
  }

  @media screen and (max-width:768px) {
    .services {
      flex-direction: column;
      align-items: stretch;
      gap: var(--space-sm);
    }

    .section-main {
      position: relative;
    }

    .section-details {
      padding: 0;
      gap: var(--space-lg);
    }

    .service-image {
      display: none;
    }

    .service-image-mobile {
      display: block;
      width: 100%;
      height: auto;
    }
  }



</style>