---
import { urlFor, getServiceDeliverables, getServices, getDeliverables, getServiceCategoryGroup } from "../../../utils/sanityClient"
import ArrowLink from "../../atoms/ArrowLink.astro";
import SanityImage from "../../atoms/SanityImage.astro";

const { content } = Astro.props;

let columns = {}
let services

if (content.service) {
  const data = await getServiceDeliverables(content.service._id)

  data.forEach((deliverable) => {
    if (columns[deliverable.category]) {
      return columns[deliverable.category].push(deliverable)
    }
    return columns[deliverable.category] = [ deliverable ];
  })
} else {
  services = await getServices()
}

// console.log(services)

---
<section class="section_service-detail" id={content.id}>

  <div class="media">
    <SanityImage 
      image={content.image}
      sizes="50vw, (max-width: 768px) 100vw"
      aspectRatio={3 / 4}
    />
  </div>

  <div class="content">
    
    <div class="section-intro">
      <div class="section-title">
        <p class="caption">{content.eyebrow ? content.eyebrow : content.service ? content.service.name : "Services"}</p>
        <h2 class="h2">{content.heading}</h2>
        <p class="category-description h6">{content.description}</p>
      </div>
      { content && content.service ? 
        null
        // <ArrowLink text="Learn More" url={`/services/${content.service.slug.current}`} />
      : 
        <ArrowLink text="View All" url={`/services`} />
      }
    </div>

    { content && content.service &&
      <div class="deliverable-categories">
        {Object.keys(columns).map((category) => {
          return (
            <div class="deliverable-category">
              <p class="category-name">{category}</p>
              <ul class="deliverables">
                {columns[category].map((deliverable) => {
                  return (
                    <li class="deliverable caption">{deliverable.name}</li>
                  )
                })}
              </ul>
            </div>
          )
        })}
      </div>
    }

  </div>

</section>

<style>
  .section_service-detail {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--space-3xl);
    padding: var(--header-height) var(--page-margin) var(--space-2xl);
  }

  .media {
    flex: 1 1 40%;
    aspect-ratio: 3 / 4;
    height: auto;
    border-radius: var(--radius-lg);
    overflow: hidden;
  }

  .content {
    flex: 0 1 60%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    gap: var(--space-2xl);
  }

  .section-intro {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
  }

  .section-title {
    display: flex;
    flex-direction: column;
    gap: var(--space-2xs);
  }
  
  .category-description {
    max-width: 40ch;
    flex: 1 1 50%;
  }

  .deliverable-categories {
    --gap: var(--space-xl);
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: wrap;
    gap: var(--gap);
  }

  .category-name {
    border-bottom: 1px solid var(--color-border);
    padding-bottom: var(--space-xs);
  }

  .deliverable-category {
    display: flex;
    flex-direction: column;
    /* flex-grow: 1; */
    /* flex: 1 1 calc(50% - var(--gap) / 2); */
    flex: 1 0 auto;
    gap: var(--space-sm);
    /* min-width: 15ch; */
    max-width: 30ch;
  }

  .deliverables {
    padding: 0 var(--space-md) 0 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .deliverable {
    list-style: none;
  }

  @media screen and (max-width:960px) {

    .section_service-detail {
      flex-direction: column;
      align-items: stretch;
    }

    /* .section-intro {
      flex-direction: column-reverse;
      align-items: stretch;
    }

    .image {
      flex: 0 0 auto;
      width: auto;
    }

    .section-details {
      flex-direction: column;
      gap: var(--space-lg);
    }

    .category-description {
      /* flex: 0 1 50%; */
      max-width: unset;
    }

    .deliverable-categories {
      /* flex-direction: column; */
      flex-wrap: wrap;
    }

    .deliverable-category {
      flex: 1 0 auto;
      gap: var(--space-sm);
      min-width: unset;
      /* max-width: 40ch; */
    } */
  }

</style>