---
import { urlFor } from "../../../utils/sanityClient";
import SanityImage from "../../atoms/SanityImage.astro";
const { content } = Astro.props;

let clientRows = [];

for (let j = 0; j < 2; j++) {
  for (let i = 0; i < content.clients.length; i++) {
    if (!clientRows[i % 3]) {
      clientRows.push([])
    }
    clientRows[i % 3].push(content.clients[i])
  }
}
---
<section>
  <div class="clients" data-animate="true">
    {clientRows.map((row) => {
      return (
        <div class="client-row">
          {row.map((client) => {
            return (
            <span class="client-card">
              {client.logo && (
                <div class="logo">
                <SanityImage 
                  sizes="10vw"
                  image={client.logo}
                  alt={`${client.name} brand logo`}
                />
                </div>
              )}
              {client.image && (
                <div class="media">
                  <SanityImage
                    sizes="20vw"
                    image={client.image}
                    alt={`Decorative editorial element for ${client.name}`}
                    cover={true}
                    eager={true}
                  />
                </div>
              )}
              </span>
            )
          })}
        </div>
      )
    })}
  </div>
</section>

<script>

  const animateLoad = () => {
    const heroSection = document.querySelector('.clients')
    if (heroSection instanceof HTMLElement ) {
      heroSection.dataset.animate = "false";
    }
  }

  document.addEventListener("astro:page-load", () => {
    animateLoad()
  })
</script>

<style>

  .clients {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
    padding: 0 var(--page-margin);
    opacity: 1;
    translate: 0 0;
    transition: opacity var(--anim-lg), translate var(--anim-lg);
  }

  .clients[data-animate="true"] {
    opacity: 0.01;
    translate: 0 60px;
  }

  .client-row {
    display: flex;
    flex-direction: row;
    gap: var(--space-sm);
    width: max-content;
    animation: client-row-scroll 80s linear 0s infinite;
  }

  .client-row:nth-child(2) {
    animation-direction: reverse;
  }

  @keyframes client-row-scroll {
    to {
      translate: calc(-50% - var(--page-margin) / 2) 0;
    }
  }

  .client-card {
    flex: 0 0 auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: var(--radius-sm);
    overflow: hidden;
    aspect-ratio: 5 / 3;
    width: max(200px, 20vw);
  }

  .logo {
    flex: 0 0 auto;
    z-index: 1;
    width: max(150px, 50%);
    height: auto;
    min-width: 0;
  }

  .media {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
  }

</style>